.\" $Id$
.Dd Oct 22, 2004
.Dt TRUSS 1
.Os
.Sh NAME
.Nm truss
.Nd trace system calls
.Sh SYNOPSIS
.Nm truss
.Op Fl acDdefi
.Op Fl o Ar file
.Op Fl r Ar fds
.Op Fl S Ar sigs
.Op Fl s Ar sigs
.Op Fl T Ar syscalls
.Bk -words
.Op Fl t Ar syscalls
.Ek
.Op Fl v Ar syscalls
.Op Fl w Ar fds
.Op Fl x Ar syscalls
.Ar command
.Op Ar argument ...
.Nm truss
.Op Fl acDdefi
.Op Fl o Ar file
.Op Fl r Ar fds
.Op Fl S Ar sigs
.Op Fl s Ar sigs
.Op Fl T Ar syscalls
.Bk -words
.Op Fl t Ar syscalls
.Ek
.Op Fl v Ar syscalls
.Op Fl w Ar fds
.Op Fl x Ar syscalls
.Fl p Ar pid
.Sh DESCRIPTION
The
.Nm
utility traces the system calls made by another process.
.Nm
can attach to a live process or start a new one and attach to it
immediately.
.Pp
This program supports the following options:
.Bl -tag -width indent
.It Fl a
Show the argument vector
.Pq Va argv
of the given process.
.It Fl c
Only show the statistics (count) of each system call.
.It Fl D
Display the elapsed time between each system call.
.It Fl d
Display an absolute date at the time of each system call.
.It Fl e
Show the environment vector (see
.Xr environ 7 )
of the given process.
.It Fl f
Follow any
.Xr fork 2
operations that the given process makes and trace the child processes
generated by such operations.
When attaching to live processes (see
.Fl p ) ,
tracing will descend to include any child processes of the target
process as well.
.It Fl i
Display interrupted system calls that are executed multiple times only
once.
.It Fl o Ar file
Send the output to the given
.Ar file
instead of to standard error by default.
.It Fl p Ar pid
Attach to and trace the live process with the given
.Ar pid
instead of
.Xr fork 2 -ing
a new process to trace.
.It Fl r Ar fds
Specify for which file descriptors
.Xr read 2
operations will be displayed.
.Ar fds
is a comma-separated list of file descriptor integers
(e.g.,
.Cm 1
for standard output).
If
.Ar fds
is prefixed with an exclamation point
.Pq Sq Cm \&! ,
the list will be negated.
The default is
.Cm all .
.It Fl S Ar sigs
Specify which signals will stop the given process.
.Ar sigs
is a comma-separated list of signal names
(e.g.,
.Cm SIGHUP ) .
If
.Ar sigs
is prefixed with an exclamation point
.Pq Sq Cm \&! ,
the list will be negated.
The default is
.Cm !all .
.It Fl s Ar sigs
Specify which signals will be displayed.
.Ar sigs
is a comma-separated list of signal names.
If
.Ar sigs
is prefixed with an exclamation point
.Pq Sq Cm \&! ,
the list will be negated.
The default is
.Cm all .
.It Fl T Ar syscalls
Specify which system calls will stop the given process.
.Ar syscalls
is a comma-separated list of system call names
(e.g.,
.Cm open ) .
If
.Ar syscalls
is prefixed with an exclamation point
.Pq Sq Cm \&! ,
the list will be negated.
The default is
.Cm !all .
.It Fl t Ar syscalls
Specify which system calls will be displayed.
.Ar syscalls
is a comma-separated list of system call names.
If
.Ar syscalls
is prefixed with an exclamation point
.Pq Sq Cm \&! ,
the list will be negated.
The default is
.Cm all .
.It Fl v Ar syscalls
Specify which system calls will be displayed verbosely.
.Ar syscalls
is a comma-separated list of system call names.
If
.Ar syscalls
is prefixed with an exclamation point
.Pq Sq Cm \&! ,
the list will be negated.
The default is
.Cm !all .
.It Fl w Ar fds
Specify for which file descriptors
.Xr write 2
operations will be displayed.
.Ar fds
is a comma-separated list of file descriptor integers.
If
.Ar fds
is prefixed with an exclamation point
.Pq Sq Cm \&! ,
the list will be negated.
The default is
.Cm all .
.It Fl x Ar syscalls
Specify for which system calls arguments to that system call will be
displayed in raw format.
.Ar syscalls
is a comma-separated list of system call names.
If
.Ar syscalls
is prefixed with an exclamation point
.Pq Sq Cm \&! ,
the list will be negated.
The default is
.Cm !all .
.El
.Sh EXAMPLES
Display all system calls made in the command
.Ic echo hello :
.Pp
.Dl $ truss echo hello
.Pp
Attach to the process with PID 52, tracing any system calls it
performs except for
.Xr open 2
and
.Xr close 2
operations:
.Pp
.Dl $ truss '-t!open,close' -p 52
.Pp
Some shells may consider
.Sq Cm \&!
a special character, so it may need to be escaped in some form, as it is
in the example above.
.Sh SEE ALSO
.Xr ksh 1 ,
.Xr ktrace 1 ,
.Xr ps 1 ,
.Xr fork 2 ,
.Xr open 2 ,
.Xr read 2 ,
.Xr write 2 ,
.Xr signal 3
.Sh HISTORY
The
.Nm
utility first appeared in SunOS 2.0.
.Sh BUGS
Although the information is displayed in real-time, it is by no means an
accurate depiction of when actual events are occurring in the process.
.Pp
The
.Fl S
and
.Fl T
flags should not be used.
